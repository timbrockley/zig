#!/bin/bash
#--------------------------------------------------------------------------------
#################################################################################
#--------------------------------------------------------------------------------
source $(dirname ${BASH_SOURCE[0]})/zigbuild-env-vars
FSTRIP="-fstrip"; [ "${ZIG_BUILD_MODE}" == "Debug" ] && FSTRIP=""
#--------------------------------------------------------------------------------
echo "zigbuild (${ZIG_BUILD_MODE} ${ZIG_BUILD_TARGET} ${ZIG_BUILD_CPU})"
#--------------------------------------------------------------------------------
#################################################################################
#--------------------------------------------------------------------------------
DIRECTORY=$(pwd); BASENAME=$(basename "$(pwd)")
#--------------------------------------------------------------------------------
SOURCE=""
#--------------------------------------------------------------------------------
ZIG_FILE_COUNT=$(find . -type f -name "*.zig" | wc -l)
#--------------------------------------------------------------------------------
OUTPUT=${BASENAME}; OUTPUT_PATH="zig-out"
#--------------------------------------------------------------------------------
#################################################################################
#--------------------------------------------------------------------------------
if [ "${1}" == "all" ]
then
	#------------------------------------------------------------
	for FILENAME in *.zig
	do
		#----------------------------------------
		if [ -f "$FILENAME" ]
		then
			#----------------------------------------
			echo "compiling ${FILENAME}"
			$(dirname ${BASH_SOURCE[0]})/zigbuild ${FILENAME} $(basename "$FILENAME" .zig)
			#----------------------------------------
		fi
		#----------------------------------------
	done
	#------------------------------------------------------------
	exit 0
	#------------------------------------------------------------
fi
#--------------------------------------------------------------------------------
#################################################################################
#--------------------------------------------------------------------------------
if [ "${1}" != "" ]
then
	#------------------------------------------------------------
	if [ -f "${1}.zig" ]
	then
		#----------------------------------------
		SOURCE="${1}.zig"
		#----------------------------------------
	else
		#----------------------------------------
		if [ -f "${1}" ]
		then
			#----------------------------------------
			SOURCE="${1}"
			#----------------------------------------
		else
			#----------------------------------------
			echo "unknown source filename: ${1}"
			exit 1
			#----------------------------------------
		fi
		#----------------------------------------
	fi
	#------------------------------------------------------------
else
	#------------------------------------------------------------
	if { [ -f "Taskfile.yml" ] || [ -f "Taskfile.yaml" ] || [ -f "taskfile.yml" ] || [ -f "taskfile.yaml" ]; } && task --list-all | grep -q build:
	then
		#----------------------------------------
		task build
		#----------------------------------------
		exit $?
		#----------------------------------------
	elif { [ -f "Makefile" ] || [ -f "makefile" ]; } && make -qp | awk -F':' '/^[a-zA-Z0-9][^$#\/\t=]*:/ {print $1}' | grep -q "^build$"
	then
		#----------------------------------------
		make build
		#----------------------------------------
		exit $?
		#----------------------------------------
	elif [ -f "build" ]
	then
		#----------------------------------------
		/bin/bash ${DIRECTORY}/build build
		#----------------------------------------
		exit $?
		#----------------------------------------
	elif [ -f "build.zig" ]
	then
		#----------------------------------------
		zig build -Doptimize=${ZIG_BUILD_MODE} -Dtarget=${ZIG_BUILD_TARGET} -Dcpu=${ZIG_BUILD_CPU}
		#----------------------------------------
		exit $?
		#----------------------------------------
	elif [ "${ZIG_FILE_COUNT}" -eq 2 ] && [ -f "root.zig" ] && [ -f "main.zig" ]
	then
		#----------------------------------------
		mkdir -p ${OUTPUT_PATH}; cd ${OUTPUT_PATH}
		#----------------------------------------
		zig build-lib ../root.zig -femit-bin=lib${OUTPUT}.a ${FSTRIP} -static -O ${ZIG_BUILD_MODE}
		[ $? -eq 0 ] && zig build-exe ../main.zig -femit-bin=${OUTPUT} -L. -l${OUTPUT} ${FSTRIP} -O ${ZIG_BUILD_MODE} -target ${ZIG_BUILD_TARGET} -mcpu=${ZIG_BUILD_CPU}
		exit $?
		#----------------------------------------
	elif [ "${ZIG_FILE_COUNT}" -eq 1 ] && [ -f "root.zig" ]
	then
		#----------------------------------------
		SOURCE="root.zig"
		#----------------------------------------
	elif [ -f "main.zig" ]
	then
		#----------------------------------------
		SOURCE="main.zig"
		#----------------------------------------
	else
		#----------------------------------------
		if [ -f "${BASENAME}.zig" ]
		then
			#----------------------------------------
			SOURCE="${BASENAME}.zig"
			#----------------------------------------
		else
			#----------------------------------------
			echo "unknown source filename"
			exit 1
			#----------------------------------------
		fi
		#----------------------------------------
	fi
	#------------------------------------------------------------
fi
#--------------------------------------------------------------------------------
#################################################################################
#--------------------------------------------------------------------------------
FILE_TYPE=$(file -b "${SOURCE}")
#--------------------------------------------------------------------------------
if echo "${FILE_TYPE}" | grep -q "text"
then
	#----------------------------------------
	mkdir -p ${OUTPUT_PATH}; cd ${OUTPUT_PATH}
	#----------------------------------------
	if [ "${SOURCE}" == "root.zig" ]
	then
		#----------------------------------------
		zig build-lib ../${SOURCE} -femit-bin=lib${OUTPUT}.so ${FSTRIP} -dynamic -O ${ZIG_BUILD_MODE} -target ${ZIG_BUILD_TARGET} -mcpu=${ZIG_BUILD_CPU}
		zig build-lib ../${SOURCE} -femit-bin=lib${OUTPUT}.a ${FSTRIP} -static -O ${ZIG_BUILD_MODE} -target ${ZIG_BUILD_TARGET} -mcpu=${ZIG_BUILD_CPU}
		#----------------------------------------
	elif [[ "${SOURCE}" =~ ^lib ]]
	then
		#----------------------------------------
		[ "${2}" == "" ] && OUTPUT=$(basename "${SOURCE}" .zig)
		zig build-lib ../${SOURCE} -femit-bin="${OUTPUT}.so" ${FSTRIP} -O ${ZIG_BUILD_MODE} -target ${ZIG_BUILD_TARGET} -mcpu=${ZIG_BUILD_CPU}
		zig build-lib ../${SOURCE} -femit-bin="${OUTPUT}.a" ${FSTRIP} -static -O ${ZIG_BUILD_MODE} -target ${ZIG_BUILD_TARGET} -mcpu=${ZIG_BUILD_CPU}
		#----------------------------------------
	else
		#----------------------------------------
		zig build-exe ../${SOURCE} -femit-bin=${OUTPUT} ${FSTRIP} -O ${ZIG_BUILD_MODE} -target ${ZIG_BUILD_TARGET} -mcpu=${ZIG_BUILD_CPU}
		#----------------------------------------
	fi
	#----------------------------------------
else
	#----------------------------------------
	echo "invalid source file type: ${SOURCE}"
	echo ${FILE_TYPE}
	#----------------------------------------
fi
#--------------------------------------------------------------------------------
#################################################################################
#--------------------------------------------------------------------------------
